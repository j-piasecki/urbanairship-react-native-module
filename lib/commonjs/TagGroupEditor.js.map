{"version":3,"names":["TagGroupEditor","constructor","onApply","operations","addTags","group","tags","operation","push","removeTags","setTags","apply"],"sources":["TagGroupEditor.ts"],"sourcesContent":["/* Copyright Airship and Contributors */\n\n'use strict';\n\n/**\n * Tag group operation.\n * @hidden\n */\nexport interface TagGroupOperation {\n  /**\n   * The operation name\n   */\n  operationType: string;\n  /**\n   * The tag group name\n   */\n  group: string;\n  /**\n   * An array of tags.\n   */\n  tags: string[];\n}\n\n/**\n * Editor for tag groups.\n */\nexport class TagGroupEditor {\n  onApply: (operations: TagGroupOperation[]) => void;\n  operations: TagGroupOperation[];\n\n  /**\n   * TagGroupEditor constructor\n   *\n   * @hidden\n   * @param onApply The apply function\n   */\n  constructor(onApply: (operations: TagGroupOperation[]) => void) {\n    this.onApply = onApply;\n    this.operations = [];\n  }\n\n  /**\n   * Adds tags to a tag group.\n   *\n   * @param tagGroup The tag group.\n   * @param tags Tags to add.\n   * @return The tag group editor instance.\n   */\n  addTags(group: string, tags: string[]): TagGroupEditor {\n    const operation = { \"operationType\": \"add\", \"group\": group, \"tags\": tags };\n    this.operations.push(operation);\n    return this;\n  }\n\n  /**\n   * Removes tags from the tag group.\n   *\n   * @param tagGroup The tag group.\n   * @param tags Tags to remove.\n   * @return The tag group editor instance.\n   */\n  removeTags(group: string, tags: string[]): TagGroupEditor {\n    const operation = { \"operationType\": \"remove\", \"group\": group, \"tags\": tags };\n    this.operations.push(operation);\n    return this;\n  }\n\n  /**\n   * Overwrite the current set of tags on the Tag Group.\n   *\n   * @param tagGroup The tag group.\n   * @param tags Tags to set.\n   * @return The tag group editor instance.\n   */\n  setTags(group: string, tags: Array<string>): TagGroupEditor {\n    const operation = { \"operationType\": \"set\", \"group\": group, \"tags\": tags };\n    this.operations.push(operation);\n    return this;\n  }\n\n  /**\n   * Applies the tag changes.\n   */\n  apply() {\n    this.onApply(this.operations);\n  }\n}\n"],"mappings":"AAAA;;AAEA,YAAY;;AAEZ;AACA;AACA;AACA;AAHA;EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAmBA;AACA;AACA;AACO,MAAMA,cAAc,CAAC;EAI1B;AACF;AACA;AACA;AACA;AACA;EACEC,WAAW,CAACC,OAAkD,EAAE;IAAA;IAAA;IAC9D,IAAI,CAACA,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACC,UAAU,GAAG,EAAE;EACtB;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;EACEC,OAAO,CAACC,KAAa,EAAEC,IAAc,EAAkB;IACrD,MAAMC,SAAS,GAAG;MAAE,eAAe,EAAE,KAAK;MAAE,OAAO,EAAEF,KAAK;MAAE,MAAM,EAAEC;IAAK,CAAC;IAC1E,IAAI,CAACH,UAAU,CAACK,IAAI,CAACD,SAAS,CAAC;IAC/B,OAAO,IAAI;EACb;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;EACEE,UAAU,CAACJ,KAAa,EAAEC,IAAc,EAAkB;IACxD,MAAMC,SAAS,GAAG;MAAE,eAAe,EAAE,QAAQ;MAAE,OAAO,EAAEF,KAAK;MAAE,MAAM,EAAEC;IAAK,CAAC;IAC7E,IAAI,CAACH,UAAU,CAACK,IAAI,CAACD,SAAS,CAAC;IAC/B,OAAO,IAAI;EACb;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;EACEG,OAAO,CAACL,KAAa,EAAEC,IAAmB,EAAkB;IAC1D,MAAMC,SAAS,GAAG;MAAE,eAAe,EAAE,KAAK;MAAE,OAAO,EAAEF,KAAK;MAAE,MAAM,EAAEC;IAAK,CAAC;IAC1E,IAAI,CAACH,UAAU,CAACK,IAAI,CAACD,SAAS,CAAC;IAC/B,OAAO,IAAI;EACb;;EAEA;AACF;AACA;EACEI,KAAK,GAAG;IACN,IAAI,CAACT,OAAO,CAAC,IAAI,CAACC,UAAU,CAAC;EAC/B;AACF;AAAC"}