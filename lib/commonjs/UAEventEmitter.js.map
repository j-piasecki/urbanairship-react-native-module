{"version":3,"names":["AirshipEventBridge","constructor","dispatchEventsCallback","DefaultAirshipEventBridge","NativeModules","UrbanAirshipReactModule","NativeEventEmitter","nativeModule","Platform","OS","AppRegistry","registerHeadlessTask","takePendingBackgroundEvents","eventEmitter","addListener","takePendingForegroundEvents","takePendingEvents","notifyAirshipListenerAdded","eventType","onAirshipListenerAdded","UAEventEmitter","airshipEventBridgeFactory","listeners","Map","airshipEventBridge","dispatchEvents","bind","removeListener","listener","typedListeners","get","filter","obj","set","Array","push","removeAllListeners","source","actions","from","keys","map","key","Promise","resolve","events","all","event"],"sources":["UAEventEmitter.ts"],"sourcesContent":["/* Copyright Airship and Contributors */\n\n'use strict';\n\nimport { NativeEventEmitter, Platform, AppRegistry, NativeModules } from \"react-native\";\n\n/**\n * @hidden\n */\nexport type DispatchEventsCallback = (source: (eventType: string) => Promise<any>) => Promise<any>;\n\n/**\n * @hidden\n */\nexport abstract class AirshipEventBridge {\n  dispatchEventsCallback: DispatchEventsCallback;\n\n  constructor(dispatchEventsCallback: DispatchEventsCallback) {\n    this.dispatchEventsCallback = dispatchEventsCallback;\n  }\n\n  abstract notifyAirshipListenerAdded(eventListener: string): void;\n}\n\nclass DefaultAirshipEventBridge extends AirshipEventBridge {\n  nativeModule = NativeModules.UrbanAirshipReactModule;\n  eventEmitter = new NativeEventEmitter(this.nativeModule);\n\n  constructor(dispatchEventsCallback: DispatchEventsCallback) {\n    super(dispatchEventsCallback);\n\n    if (Platform.OS === 'android') {\n      AppRegistry.registerHeadlessTask('AirshipAndroidBackgroundEventTask', () => {\n        return () => dispatchEventsCallback(this.nativeModule.takePendingBackgroundEvents);\n      });\n\n      this.eventEmitter.addListener(\"com.urbanairship.onPendingForegroundEvent\", async () => {\n        return dispatchEventsCallback(this.nativeModule.takePendingForegroundEvents);\n      });\n    } else if (Platform.OS === 'ios') {\n      this.eventEmitter.addListener(\"com.urbanairship.onPendingEvent\", async () => {\n        return dispatchEventsCallback(this.nativeModule.takePendingEvents);\n      });\n    }\n  }\n\n  notifyAirshipListenerAdded(eventType: string): void {\n    this.nativeModule.onAirshipListenerAdded(eventType);\n  }\n}\n\n/**\n * SDK event emitter.\n *\n * @hidden\n */\nexport class UAEventEmitter {\n  airshipEventBridge: AirshipEventBridge;\n  listeners: Map<string, Array<(...args: any[]) => any>>;\n\n  constructor(airshipEventBridgeFactory?: (callback: DispatchEventsCallback) => AirshipEventBridge) {\n    this.listeners = new Map();\n    this.airshipEventBridge = airshipEventBridgeFactory ?\n      airshipEventBridgeFactory(this.dispatchEvents.bind(this))\n      : new DefaultAirshipEventBridge(this.dispatchEvents.bind(this));\n  }\n\n  removeListener(eventType: string, listener: (...args: any[]) => any): void {\n    var typedListeners = this.listeners.get(eventType);\n    if (typedListeners) {\n      typedListeners = typedListeners.filter(obj => obj !== listener);\n      this.listeners.set(eventType, typedListeners);\n    }\n  }\n\n  addListener(eventType: string, listener: (...args: any[]) => any): void {\n    if (!this.listeners.get(eventType)) {\n      this.listeners.set(eventType, new Array());\n    }\n\n    this.listeners.get(eventType)?.push(listener);\n    this.airshipEventBridge.notifyAirshipListenerAdded(eventType);\n  }\n\n  removeAllListeners(eventType: string) {\n    this.listeners.set(eventType, new Array());\n  }\n\n  private async dispatchEvents(source: (eventType: string) => Promise<any>): Promise<any> {\n    let actions = Array.from(this.listeners.keys())\n      .map(async (key: string) => {\n        let typedListeners = this.listeners.get(key);\n        if (typedListeners == null) {\n          return Promise.resolve();\n        }\n\n        let events = await source(key);\n        return Promise.all(typedListeners.map(async (listener: (...args: any[]) => any) => {\n          for (const event of events) {\n            await listener(event);\n          }\n        }))\n      });\n    return Promise.all(actions);\n  }\n}\n"],"mappings":"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"}