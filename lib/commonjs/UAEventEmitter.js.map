{"version":3,"names":["AirshipEventBridge","constructor","dispatchEventsCallback","DefaultAirshipEventBridge","NativeModules","UrbanAirshipReactModule","NativeEventEmitter","nativeModule","Platform","OS","AppRegistry","registerHeadlessTask","takePendingBackgroundEvents","eventEmitter","addListener","takePendingForegroundEvents","takePendingEvents","notifyAirshipListenerAdded","eventType","onAirshipListenerAdded","UAEventEmitter","airshipEventBridgeFactory","listeners","Map","airshipEventBridge","dispatchEvents","bind","removeListener","listener","typedListeners","get","filter","obj","set","Array","push","removeAllListeners","source","actions","from","keys","map","key","Promise","resolve","events","all","event"],"sources":["UAEventEmitter.ts"],"sourcesContent":["/* Copyright Airship and Contributors */\n\n'use strict';\n\nimport { NativeEventEmitter, Platform, AppRegistry, NativeModules } from \"react-native\";\n\n/**\n * @hidden\n */\nexport type DispatchEventsCallback = (source: (eventType: string) => Promise<any>) => Promise<any>;\n\n/**\n * @hidden\n */\nexport abstract class AirshipEventBridge {\n  dispatchEventsCallback: DispatchEventsCallback;\n\n  constructor(dispatchEventsCallback: DispatchEventsCallback) {\n    this.dispatchEventsCallback = dispatchEventsCallback;\n  }\n\n  abstract notifyAirshipListenerAdded(eventListener: string): void;\n}\n\nclass DefaultAirshipEventBridge extends AirshipEventBridge {\n  nativeModule = NativeModules.UrbanAirshipReactModule;\n  eventEmitter = new NativeEventEmitter(this.nativeModule);\n\n  constructor(dispatchEventsCallback: DispatchEventsCallback) {\n    super(dispatchEventsCallback);\n\n    if (Platform.OS === 'android') {\n      AppRegistry.registerHeadlessTask('AirshipAndroidBackgroundEventTask', () => {\n        return () => dispatchEventsCallback(this.nativeModule.takePendingBackgroundEvents);\n      });\n\n      this.eventEmitter.addListener(\"com.urbanairship.onPendingForegroundEvent\", async () => {\n        return dispatchEventsCallback(this.nativeModule.takePendingForegroundEvents);\n      });\n    } else if (Platform.OS === 'ios') {\n      this.eventEmitter.addListener(\"com.urbanairship.onPendingEvent\", async () => {\n        return dispatchEventsCallback(this.nativeModule.takePendingEvents);\n      });\n    }\n  }\n\n  notifyAirshipListenerAdded(eventType: string): void {\n    this.nativeModule.onAirshipListenerAdded(eventType);\n  }\n}\n\n/**\n * SDK event emitter.\n *\n * @hidden\n */\nexport class UAEventEmitter {\n  airshipEventBridge: AirshipEventBridge;\n  listeners: Map<string, Array<(...args: any[]) => any>>;\n\n  constructor(airshipEventBridgeFactory?: (callback: DispatchEventsCallback) => AirshipEventBridge) {\n    this.listeners = new Map();\n    this.airshipEventBridge = airshipEventBridgeFactory ?\n      airshipEventBridgeFactory(this.dispatchEvents.bind(this))\n      : new DefaultAirshipEventBridge(this.dispatchEvents.bind(this));\n  }\n\n  removeListener(eventType: string, listener: (...args: any[]) => any): void {\n    var typedListeners = this.listeners.get(eventType);\n    if (typedListeners) {\n      typedListeners = typedListeners.filter(obj => obj !== listener);\n      this.listeners.set(eventType, typedListeners);\n    }\n  }\n\n  addListener(eventType: string, listener: (...args: any[]) => any): void {\n    if (!this.listeners.get(eventType)) {\n      this.listeners.set(eventType, new Array());\n    }\n\n    this.listeners.get(eventType)?.push(listener);\n    this.airshipEventBridge.notifyAirshipListenerAdded(eventType);\n  }\n\n  removeAllListeners(eventType: string) {\n    this.listeners.set(eventType, new Array());\n  }\n\n  private async dispatchEvents(source: (eventType: string) => Promise<any>): Promise<any> {\n    let actions = Array.from(this.listeners.keys())\n      .map(async (key: string) => {\n        let typedListeners = this.listeners.get(key);\n        if (typedListeners == null) {\n          return Promise.resolve();\n        }\n\n        let events = await source(key);\n        return Promise.all(typedListeners.map(async (listener: (...args: any[]) => any) => {\n          for (const event of events) {\n            await listener(event);\n          }\n        }))\n      });\n    return Promise.all(actions);\n  }\n}\n"],"mappings":"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"}