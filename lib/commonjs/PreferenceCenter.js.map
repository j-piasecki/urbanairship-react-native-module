{"version":3,"names":[],"sources":["PreferenceCenter.ts"],"sourcesContent":["/* Copyright Airship and Contributors */\n\n'use strict';\n\nimport { SubscriptionScope } from './UrbanAirship'\nimport { JsonValue } from \"./Json\";\n\n// ---\n// See: https://github.com/urbanairship/web-push-sdk/blob/master/src/remote-data/preference-center.ts\n// ---\n\n/**\n * A preference center definition.\n *\n * @typedef {object} PreferenceCenter\n * @property {string} id the ID of the preference center\n * @property {Array<PreferenceCenter.CommonSection>} sections a list of sections\n * @property {?CommonDisplay} display display information\n */\nexport type PreferenceCenter = {\n  id: string\n  sections: Section[]\n  display?: CommonDisplay\n}\n\n/**\n * Preference center display information.\n * @typedef {object} CommonDisplay\n * @property {string} name\n * @property {?string} description\n */\nexport type CommonDisplay = {\n  name: string\n  description?: string\n}\n\nexport type Icon = {\n  icon: string\n}\n\nexport type IconDisplay = CommonDisplay & Partial<Icon>\n\nexport interface ItemBase {\n  type: unknown\n  id: string\n  display: CommonDisplay\n  conditions?: Condition[]\n}\n\n/**\n * A channel subscription item.\n * @typedef {object} ChannelSubscriptionItem\n * @memberof PreferenceCenter\n * @property {\"channel_subscription\"} type\n * @property {string} id the item identifier\n * @property {?CommonDisplay} display display information\n * @property {string} subscription_id the subscription list id\n */\nexport interface ChannelSubscriptionItem extends ItemBase {\n  type: 'channel_subscription'\n  subscription_id: string\n}\n\nexport interface ContactSubscriptionGroupItem extends ItemBase {\n  type: 'contact_subscription_group'\n  id: string\n  subscription_id: string\n  components: ContactSubscriptionGroupItemComponent[]\n}\n\nexport interface ContactSubscriptionGroupItemComponent {\n  scopes: SubscriptionScope[]\n  display: Omit<CommonDisplay, 'description'>\n}\n\nexport interface ContactSubscriptionItem extends ItemBase {\n  type: 'contact_subscription'\n  scopes: SubscriptionScope[]\n  subscription_id: string\n}\n\nexport interface AlertItem extends ItemBase {\n  type: 'alert'\n  display: IconDisplay\n  button?: Button\n}\n\nexport interface ConditionBase {\n  type: unknown\n}\n\nexport interface NotificationOptInCondition extends ConditionBase {\n  type: 'notification_opt_in'\n  when_status: 'opt_in' | 'opt_out'\n}\n\nexport type Condition = NotificationOptInCondition\n\n// Changed from `unknown` in spec\nexport type Actions = {\n  [key: string]: JsonValue;\n};\n\nexport interface Button {\n  text: string\n  content_description?: string\n  actions: Actions\n}\n\nexport interface SectionBase {\n  type: unknown\n  id: string\n  display?: CommonDisplay\n  items: Item[]\n}\n\n/**\n * @typedef {object} CommonSection\n * @memberof PreferenceCenter\n * @property {\"section\"} type\n * @property {string} id the section identifier\n * @property {?CommonDisplay} display display information\n * @property {Array<PreferenceCenter.ChannelSubscriptionItem>} items list of\n *   section items\n */\nexport interface CommonSection extends SectionBase {\n  type: 'section'\n}\n\nexport interface LabeledSectionBreak extends SectionBase {\n  type: 'labeled_section_break'\n  items: never\n}\n\nexport type Item =\n  | ChannelSubscriptionItem\n  | ContactSubscriptionGroupItem\n  | ContactSubscriptionItem\n  | AlertItem\n\nexport type Section = CommonSection | LabeledSectionBreak\n"],"mappings":"AAAA;AAEA"}