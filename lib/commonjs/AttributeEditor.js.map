{"version":3,"names":["AttributeEditor","constructor","onApply","operations","setAttribute","name","value","attributeValue","attributeType","toString","Date","getTime","operation","type","push","removeAttribute","apply"],"sources":["AttributeEditor.ts"],"sourcesContent":["/* Copyright Airship and Contributors */\n\n'use strict';\n\n/**\n * Attribute operation\n * @hidden\n */\nexport interface AttributeOperation {\n  /**\n   * The operation name.\n   */\n  action: string;\n  /**\n   * The attribute key.\n   */\n  key: string;\n  /**\n   * The attribute value, if avaialble.\n   */\n  value?: string | number | Date;\n  /**\n   * The attribute type, if available.\n   */\n  type?: \"string\" | \"number\" | \"date\";\n}\n\n/**\n * Editor for attributes.\n */\nexport class AttributeEditor {\n  onApply: (operations: AttributeOperation[]) => void;\n  operations: AttributeOperation[];\n\n  /**\n   * AttributeEditor constructor\n   *\n   * @hidden\n   * @param onApply The apply function\n   */\n  constructor(onApply: (operations: AttributeOperation[]) => void) {\n    this.onApply = onApply;\n    this.operations = [];\n  }\n\n  /**\n   * Adds an attribute.\n   *\n   * @param value The attribute value.\n   * @param name The attribute name.\n   * @return The attribute editor instance.\n   */\n  setAttribute(name: string, value: string | number | boolean | Date): AttributeEditor {\n    var attributeValue: string | number | Date;\n    var attributeType: \"string\" | \"number\" | \"date\";\n\n    if (typeof value == \"boolean\") {\n\n      // No boolean attribute type. Convert value to string.\n      attributeValue = value.toString();\n      attributeType = \"string\";\n\n    } else {\n\n      attributeValue = value;\n      if (typeof value === \"string\") {\n        attributeType = \"string\";\n      } else if (typeof attributeValue === \"number\") {\n        attributeType = \"number\";\n      } else if (value instanceof Date) {\n        // JavaScript's date type doesn't pass through the JS to native bridge.\n        // Dates are instead serialized as milliseconds since epoch.\n        attributeType = \"date\";\n        attributeValue = value.getTime();\n      } else {\n        throw \"Unsupported attribute type: \" + typeof attributeValue;\n      }\n    }\n\n    const operation = { \"action\": \"set\", \"value\": attributeValue, \"key\": name, type: attributeType};\n    this.operations.push(operation);\n\n    return this;\n  }\n\n  /**\n   * Removes an attribute.\n   * @param name The name of the attribute to remove.\n   * @return The attribute editor instance.\n   */\n  removeAttribute(name: string): AttributeEditor {\n    const operation = { \"action\": \"remove\", \"key\": name };\n    this.operations.push(operation);\n    return this;\n  }\n\n  /**\n   * Applies the attribute operations.\n   */\n  apply() {\n    this.onApply(this.operations);\n  }\n}\n"],"mappings":"AAAA;AAEA;AAEA;AACA;AACA;AACA;;;;;;;;;AAoBA;AACA;AACA;AACO,MAAMA,eAAN,CAAsB;EAI3B;AACF;AACA;AACA;AACA;AACA;EACEC,WAAW,CAACC,OAAD,EAAsD;IAAA;;IAAA;;IAC/D,KAAKA,OAAL,GAAeA,OAAf;IACA,KAAKC,UAAL,GAAkB,EAAlB;EACD;EAED;AACF;AACA;AACA;AACA;AACA;AACA;;;EACEC,YAAY,CAACC,IAAD,EAAeC,KAAf,EAAyE;IACnF,IAAIC,cAAJ;IACA,IAAIC,aAAJ;;IAEA,IAAI,OAAOF,KAAP,IAAgB,SAApB,EAA+B;MAE7B;MACAC,cAAc,GAAGD,KAAK,CAACG,QAAN,EAAjB;MACAD,aAAa,GAAG,QAAhB;IAED,CAND,MAMO;MAELD,cAAc,GAAGD,KAAjB;;MACA,IAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;QAC7BE,aAAa,GAAG,QAAhB;MACD,CAFD,MAEO,IAAI,OAAOD,cAAP,KAA0B,QAA9B,EAAwC;QAC7CC,aAAa,GAAG,QAAhB;MACD,CAFM,MAEA,IAAIF,KAAK,YAAYI,IAArB,EAA2B;QAChC;QACA;QACAF,aAAa,GAAG,MAAhB;QACAD,cAAc,GAAGD,KAAK,CAACK,OAAN,EAAjB;MACD,CALM,MAKA;QACL,MAAM,iCAAiC,OAAOJ,cAA9C;MACD;IACF;;IAED,MAAMK,SAAS,GAAG;MAAE,UAAU,KAAZ;MAAmB,SAASL,cAA5B;MAA4C,OAAOF,IAAnD;MAAyDQ,IAAI,EAAEL;IAA/D,CAAlB;IACA,KAAKL,UAAL,CAAgBW,IAAhB,CAAqBF,SAArB;IAEA,OAAO,IAAP;EACD;EAED;AACF;AACA;AACA;AACA;;;EACEG,eAAe,CAACV,IAAD,EAAgC;IAC7C,MAAMO,SAAS,GAAG;MAAE,UAAU,QAAZ;MAAsB,OAAOP;IAA7B,CAAlB;IACA,KAAKF,UAAL,CAAgBW,IAAhB,CAAqBF,SAArB;IACA,OAAO,IAAP;EACD;EAED;AACF;AACA;;;EACEI,KAAK,GAAG;IACN,KAAKd,OAAL,CAAa,KAAKC,UAAlB;EACD;;AAvE0B"}