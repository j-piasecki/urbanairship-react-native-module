import groovy.json.JsonSlurper

buildscript {
    ext {
        airshipVersion = "16.8.0"

        kotlinVersion = '1.5.31'
        androidToolsVersion = '4.1.3'
    }

    repositories {
        google()
        mavenCentral()
    }

    dependencies {
        classpath "com.android.tools.build:gradle:${project.ext.androidToolsVersion}"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${project.ext.kotlinVersion}"
    }
}

def isNewArchitectureEnabled() {
    // To opt-in for the New Architecture, you can either:
    // - Set `newArchEnabled` to true inside the `gradle.properties` file
    // - Invoke gradle with `-newArchEnabled=true`
    // - Set an environment variable `ORG_GRADLE_PROJECT_newArchEnabled=true`
    return project.hasProperty("newArchEnabled") && project.newArchEnabled == "true"
}

apply plugin: 'com.android.library'
apply plugin: "kotlin-android"

if (isNewArchitectureEnabled()) {
    apply plugin: "com.facebook.react"
}

android {
    // Android SDK Versions
    compileSdkVersion 31

    defaultConfig {
        targetSdkVersion 31
        minSdkVersion 21

        buildConfigField("String", "MODULE_VERSION", "\"${getModuleVersion()}\"")
        buildConfigField "boolean", "IS_NEW_ARCHITECTURE_ENABLED", isNewArchitectureEnabled().toString()
        consumerProguardFiles 'proguard-rules.pro'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    sourceSets.main {
        java {
            if (isNewArchitectureEnabled()) {
                 srcDirs += [
                     "src/fabric/java",
                     // this shouldn't be necessary, AGP sets the path correctly but if it's not repeated here, the build fails
                     "build/generated/source/codegen/java"
                 ]
            } else {
                 srcDirs += [
                     "src/paper/java"
                 ]
            }
        }
    }
}

repositories {
    maven {
        // All of React Native (JS, Obj-C sources, Android binaries) is installed from npm
        url "$projectDir/../node_modules/react-native/android"
    }
    google()
    mavenCentral()
}

def getModuleVersion() {
    def jsonFile = file('../package.json')
    def parsedJson = new JsonSlurper().parseText(jsonFile.text)

    return parsedJson["version"]
}

def safeExtGet (prop, fallback) {
    rootProject.ext.has(prop) ? rootProject.ext.get(prop) : fallback
}

dependencies {
    if (isNewArchitectureEnabled()) {
        implementation project(":ReactAndroid")
    } else {
        implementation 'com.facebook.react:react-native:+'
    }

    implementation "androidx.lifecycle:lifecycle-common-java8:2.4.1"
    implementation "androidx.appcompat:appcompat:1.3.1"
    
    api ("com.urbanairship.android:urbanairship-fcm:${project.ext.airshipVersion}") {
        exclude group: 'com.google.firebase', module: 'firebase-messaging'
        exclude group:'androidx.appcompat', module: 'appcompat'
    }

    api ("com.urbanairship.android:urbanairship-message-center:${project.ext.airshipVersion}") {
        exclude group:'androidx.appcompat', module: 'appcompat'
    }
    api ("com.urbanairship.android:urbanairship-automation:${project.ext.airshipVersion}") {
        exclude group:'androidx.appcompat', module: 'appcompat'
    }
    implementation("com.urbanairship.android:urbanairship-preference-center:${project.ext.airshipVersion}") {
        exclude group:'androidx.appcompat', module: 'appcompat'
    }
    implementation "com.google.firebase:firebase-messaging:${safeExtGet('firebaseMessagingVersion', '22.0.0')}"
}
