
/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GenerateEventEmitterCpp.js
 */

#include <react/renderer/components/urbanairshiprn/EventEmitters.h>

namespace facebook {
namespace react {

void UARCTMessageViewEventEmitter::onLoadStarted(OnLoadStarted event) const {
  dispatchEvent("loadStarted", [event=std::move(event)](jsi::Runtime &runtime) {
    auto payload = jsi::Object(runtime);
    payload.setProperty(runtime, "messageId", event.messageId);
    return payload;
  });
}
void UARCTMessageViewEventEmitter::onLoadFinished(OnLoadFinished event) const {
  dispatchEvent("loadFinished", [event=std::move(event)](jsi::Runtime &runtime) {
    auto payload = jsi::Object(runtime);
    payload.setProperty(runtime, "messageId", event.messageId);
    return payload;
  });
}
void UARCTMessageViewEventEmitter::onLoadError(OnLoadError event) const {
  dispatchEvent("loadError", [event=std::move(event)](jsi::Runtime &runtime) {
    auto payload = jsi::Object(runtime);
    payload.setProperty(runtime, "messageId", event.messageId);
payload.setProperty(runtime, "retryable", event.retryable);
payload.setProperty(runtime, "error", event.error);
    return payload;
  });
}
void UARCTMessageViewEventEmitter::onClose(OnClose event) const {
  dispatchEvent("close", [event=std::move(event)](jsi::Runtime &runtime) {
    auto payload = jsi::Object(runtime);
    payload.setProperty(runtime, "messageId", event.messageId);
    return payload;
  });
}

} // namespace react
} // namespace facebook
